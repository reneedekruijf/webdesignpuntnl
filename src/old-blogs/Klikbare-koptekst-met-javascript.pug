extends ../layout/layout
include ../mixins/blogNav

block prepend head
    - var page = "klikbarekoptekst"
    - var title = "Klikbare koptekst met Javascript"
    - var description = "Hoe maak je een kopstekst klikbaar met Javascript?"
    - var path = "../"

block content
  +blogNav(page)
  //- Klikbare koptekst met Javascript
  article(class="article article--blog")     
    div.align
      h2.h2.h2--blog Klikbare koptekst met Javascript
      p(class="p p__left p__left--blog" ) 
        strong.p__firstWord Voor 
        | een klant heb ik een Wordpress site gemaakt. Ik heb dit met Wordpress gedaan omdat hij de site dan zelf bij kan houden en technische kennis van HTML tot het minimale wordt beperkt. Je moet natuurlijk wel wat kennis hebben. Dingen als afbeeldingen en koppen worden immers niet vanzelf toegevoegd. Er staat veel tekst op deze site en om mensen te laten kiezen wat ze willen lezen hebben we er voor gekozen om gedeeltes van teksten te verbergen en met een klik zichtbaar te maken. Ik heb het in de 
        a(href="heading.html") blog klikbare koptekst
        |  al gehad over de toegankelijkheid hiervan en wil nu naar de technische kant kijken. Om het voor de beheerder van de site zo simpel mogelijk te houden heb ik ervoor gekozen om zo min mogelijk HTML te gebruik zodat het gemakkelijk is om dit  op meerdere plekken in de site gebruiken. Je kunt volstaan met 3 tags. Een heading-tag (een h2 in dit geval), een article-tag en een div-tag. De h2 wordt klikbaar met Javascript en heeft geen class nodig. Deze h2 komt in een article-tag met de class hiddenText. In dit article komt er nog een div met de class showText, in deze div komt nu de tekst te staan die we uiteindelijk willen verbergen. De tekst in de article-tag is wel gewoon te lezen als de pagina eenmaal geladen is.
        | Dit komt er dan zo uit te zien:
      p(class="p p__left p__left--blog" )
        pre.language-html.blog
          span.h3.h3--hidden Voorbeeld van de HTML
          code.language-html
            | &lt;article class="hidenText"&gt;
            |   &lt;h2&gt;Ik ben een kop&lt;/h2&gt;
            |   &lt;p&gt;Hier staat tekst die zichtbaar is&lt;/p&gt;
            |   &lt;div class="showText"&gt;
            |     &lt;p&gt;Verborgen&lt;/p&gt;
            |   &lt;/div&gt;
            | &lt;/article&gt;
        p(class="p p__left p__left--blog" )
          | De tekst gaan we verbergen met Javascript maar we maken een class aan waarin we de tekst verbergen allen zetten we deze class dynamisch met Javscript op de div. Als je het zo doe dan is de tekst ten allen tijde te lezen mocht Javascript niet werken.
          | Dit wordt dan de CSS:
        p(class="p p__left p__left--blog" )
          pre.language-css.blog
            span.h3.h3--hidden Voorbeeld CSS voor verborgen tekst
            code.language-css
              | .hide {
              |   position: absolute;
              |   left: -9999px;
              | }
        p(class="p p__left p__left--blog")
          | Met Javascript plaatsen we deze tekst nu buiten beeld door op de div de class hide te zetten.
          p(class="p p__left p__left--blog" )
        pre.language-javascript.blog
            span.h3.h3--hidden Voorbeeld Javascript code
            code.language-javascript
                | const hiddenText = document.querySelector('.hiddenText');
                | hiddenText.classList.add('hide');
        p(class="p p__left p__left--blog" )
            | Nu gaan we de h2 klikbaar maken:
        p(class="p p__left p__left--blog")
          pre.language-javascript.blog
            span.h3.h3--hidden Voorbeeld Javascript code
            code.language-javascript
                | const heading = document.querySelector('h2');
                | heading.addEventListener('click', () => {
                |   hiddenText.classList.contains('hide') ? 
                |   hiddenText.classList.remove('hide') : 
                |   hiddenText.classList.add('hide')
                | });
        p(class="p p__left p__left--blog")
          | Als je nu naar de pagina kijkt dan is de tekst verborgen, als je op de koptekst klikt dan wordt tekst zichbaar, met een tweede klik verdwijnt de tekst weer. De kopt is nu nog steeds geen interactief element, je kunt de kop dus niet bereiken of activeren met het toetsenbord. Probeer maar eens met de TAB-toets. Dus wil ik een button (het is een actie dus een button) plaatsen in de h2-tag. Ik wil de tekst van de h2 tag gebruiken voor de tekst van de button.
        p(class="p p__left p__left--blog")
          pre.language-javascript.blog
            span.h3.h3--hidden Voorbeeld Javascript code
            code.language-javascript
                | const textHeading = heading.innerText;
                |
                | const button = `
                |   &lt;button class="button"&gt;
                |   ${textHeading}
                |   &lt;/button&gt;
                |   `;
                |
                | heading.innerHTML = button;
        p(class="p p__left p__left--blog" )
          pre.language-css.blog
            span.h3.h3--hidden Voorbeeld CSS voor verborgen tekst
            code.language-css
              | .button {
              |    text-decoration: underline;
              |    cursor: pointer;
              |    border: none;
              |    background-color: transparent;
              |    font-size: 2rem;
              |    font-weight: bold;
              |  }
          p(class="p p__left p__left--blog" )
            | De kop is nu klikbaar en te bereiken activeren met het toetsenbord. Doet de Javascript het niet dan is het gewone kop en de tekst is zichtbaar. Dit is nu een toegankelijk verborgen tekst.
            span(class="span__date") Gepubliceerd op 2 april 2020 door Renee de Kruijf 
            a(href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="small" data-via="reneedekruijf" data-hashtags="cliackableheading" data-show-count="false") Tweet
block script
  script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")
  script(src=`${path}js/main-bundle.js`)
  script(async src="https://www.googletagmanager.com/gtag/js?id=UA-63079670-2")
  script
    | window.dataLayer = window.dataLayer || [];
    | function gtag(){dataLayer.push(arguments);}
    | gtag('js', new Date());
    | gtag('config', 'UA-63079670-2', { 'anonymize_ip': true });