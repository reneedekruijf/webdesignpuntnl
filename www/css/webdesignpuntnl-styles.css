/* # =================================================================
   # Global selectors
   # ================================================================= */
html {
  box-sizing: border-box;
  overflow-y: scroll;
  /* All browsers without overlaying scrollbars */
  -webkit-text-size-adjust: 100%;
  /* iOS 8+ */
}

*,
::before,
::after {
  box-sizing: inherit;
}

::before,
::after {
  text-decoration: inherit;
  /* Inherit text-decoration and vertical align to ::before and ::after pseudo elements */
  vertical-align: inherit;
}

/* Remove margin, padding of all elements and set background-no-repeat as default */
* {
  background-repeat: no-repeat;
  /* Set `background-repeat: no-repeat` to all elements */
  padding: 0;
  /* Reset `padding` and `margin` of all elements */
  margin: 0;
}

/* # =================================================================
    # General elements
    # ================================================================= */
/* Add the correct display in iOS 4-7.*/
audio:not([controls]) {
  display: none;
  height: 0;
}

hr {
  overflow: visible;
  /* Show the overflow in Edge and IE */
}

/*
 * Correct `block` display not defined for any HTML5 element in IE 8/9
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox
 * Correct `block` display not defined for `main` in IE 11
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

summary {
  display: list-item;
  /* Add the correct display in all browsers */
}

small {
  font-size: 80%;
  /* Set font-size to 80% in `small` elements */
}

[hidden],
template {
  display: none;
  /* Add the correct display in IE */
}

abbr[title] {
  border-bottom: 1px dotted;
  /* Add a bordered underline effect in all browsers */
  text-decoration: none;
  /* Remove text decoration in Firefox 40+ */
}

a {
  background-color: transparent;
  /* Remove the gray background on active links in IE 10 */
  -webkit-text-decoration-skip: objects;
  /* Remove gaps in links underline in iOS 8+ and Safari 8+ */
}

a:active,
a:hover {
  outline-width: 0;
  /* Remove the outline when hovering in all browsers */
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* Specify the font family of code elements */
}

b,
strong {
  font-weight: bolder;
  /* Correct style set to `bold` in Edge 12+, Safari 6.2+, and Chrome 18+ */
}

dfn {
  font-style: italic;
  /* Address styling not present in Safari and Chrome */
}

/* Address styling not present in IE 8/9 */
mark {
  background-color: #ff0;
  color: #000;
}

/* https://gist.github.com/unruthless/413930 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* # =================================================================
    # Forms
    # ================================================================= */
input {
  border-radius: 0;
}

/* Apply cursor pointer to button elements */
button,
[type="button"],
[type="reset"],
[type="submit"]
[role="button"] {
  cursor: pointer;
}

/* Replace pointer cursor in disabled elements */
[disabled] {
  cursor: default;
}

[type="number"] {
  width: auto;
  /* Firefox 36+ */
}

[type="search"] {
  -webkit-appearance: textfield;
  /* Safari 8+ */
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  /* Safari 8 */
}

textarea {
  overflow: auto;
  /* Internet Explorer 11+ */
  resize: vertical;
  /* Specify textarea resizability */
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* Specify font inheritance of form elements */
}

optgroup {
  font-weight: bold;
  /* Restore the font weight unset by the previous rule. */
}

button {
  overflow: visible;
  /* Address `overflow` set to `hidden` in IE 8/9/10/11 */
}

/* Remove inner padding and border in Firefox 4+ */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: 0;
  padding: 0;
}

/* Replace focus style removed in the border reset above */
button:-moz-focusring,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  outline: 1px dotted ButtonText;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* Correct the inability to style clickable types in iOS */
}

button,
select {
  text-transform: none;
  /* Firefox 40+, Internet Explorer 11- */
}

/* Remove the default button styling in all browsers */
button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
  color: inherit;
}

/* Style select like a standard input */
select {
  -moz-appearance: none;
  /* Firefox 36+ */
  -webkit-appearance: none;
  /* Chrome 41+ */
}

select::-ms-expand {
  display: none;
  /* Internet Explorer 11+ */
}

select::-ms-value {
  color: currentColor;
  /* Internet Explorer 11+ */
}

legend {
  border: 0;
  /* Correct `color` not being inherited in IE 8/9/10/11 */
  color: inherit;
  /* Correct the color inheritance from `fieldset` elements in IE */
  display: table;
  /* Correct the text wrapping in Edge and IE */
  max-width: 100%;
  /* Correct the text wrapping in Edge and IE */
  white-space: normal;
  /* Correct the text wrapping in Edge and IE */
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* Correct the inability to style clickable types in iOS and Safari */
  font: inherit;
  /* Change font properties to `inherit` in Chrome and Safari */
}

[type="search"] {
  -webkit-appearance: textfield;
  /* Correct the odd appearance in Chrome and Safari */
  outline-offset: -2px;
  /* Correct the outline style in Safari */
}

/* # =================================================================
    # Specify media element style
    # ================================================================= */
img {
  border-style: none;
  /* Remove border when inside `a` element in IE 8/9/10 */
}

/* Add the correct vertical alignment in Chrome, Firefox, and Opera */
progress {
  vertical-align: baseline;
}

svg:not(:root) {
  overflow: hidden;
  /* Internet Explorer 11- */
}

audio,
canvas,
progress,
video {
  display: inline-block;
  /* Internet Explorer 11+, Windows Phone 8.1+ */
}

/* # =================================================================
    # Accessibility
    # ================================================================= */
/* Hide content from screens but not screenreaders */
@media screen {
  [hidden~="screen"] {
    display: inherit;
  }
  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    position: absolute !important;
    clip: rect(0 0 0 0) !important;
  }
}

/* Specify the progress cursor of updating elements */
[aria-busy="true"] {
  cursor: progress;
}

/* Specify the pointer cursor of trigger elements */
[aria-controls] {
  cursor: pointer;
}

/* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */
[aria-disabled] {
  cursor: default;
}

/* # =================================================================
    # Selection
    # ================================================================= */
/* Specify text selection background color and omit drop shadow */
::-moz-selection {
  background-color: #b3d4fc;
  /* Required when declaring ::selection */
  color: #000;
  text-shadow: none;
}

::selection {
  background-color: #b3d4fc;
  /* Required when declaring ::selection */
  color: #000;
  text-shadow: none;
}

/*  ######################################### 
     320
    ######################################### */
/*  ######################################### 
     512
    ######################################### */
/*  ######################################### 
    600
    ######################################### */
/*  ######################################### 
    768
    ######################################### */
/*  ######################################### 
     1200
    ######################################### */
html {
  font-size: 100%;
}

body {
  background-color: #FD8A39;
  font-family: "Raleway", Arial, Helvetica, sans-serif;
  position: relative;
}

.pageWrapper {
  position: relative;
  clear: both;
  overflow: hidden;
  margin: 0 auto;
  z-index: 1;
}

header {
  background-color: #FFE755;
  padding: 1rem 0 0 0;
}

nav a:link, nav a:visited {
  font-family: "Raleway", Arial, Helvetica, sans-serif;
  font-weight: 700;
  font-style: normal;
  font-size: 1.2rem;
  color: #000000;
  text-transform: uppercase;
  text-decoration: none;
}

nav a:link:hover, nav a:visited:hover {
  color: #FD8A39;
  text-shadow: #000000 1px 1px 1px;
}

nav a:link.active, nav a:visited.active {
  color: #FD8A39;
  text-shadow: #000000 1px 1px 1px;
}

nav ul {
  width: 100%;
  text-align: center;
  padding: 0 0 2rem 0;
}

nav ul li {
  padding: 0.4rem;
}

.logo {
  border: 1px solid #000000;
  margin: 0 auto 2rem auto;
  max-width: 200px;
  overflow: hidden;
}

.logo h1 {
  font-family: "Segoe UI", Arial, Helvetica, sans-serif;
  font-weight: 400;
  font-style: normal;
  letter-spacing: 0.1rem;
  font-size: 1.1rem;
  color: #000000;
  text-align: center;
  position: absolute;
  z-index: 999;
  top: 36px;
  left: 50%;
  -webkit-transform: translate(-50%);
          transform: translate(-50%);
}

.logo h1 span {
  padding: 0 0.6rem;
}

.logo .top {
  font-size: 0;
  height: 30px;
}

.logo .top span {
  background: linear-gradient(#FD8A39, #FD8A39 50%, #FFE755, #FFE755 50%);
  display: block;
  position: relative;
  left: 108px;
  width: 60px;
  height: 60px;
  border-radius: 50%;
}

.logo .bottom {
  font-size: 0;
  background-color: #FD8A39;
  height: 30px;
}

main {
  text-align: center;
}

main h2 {
  padding: 3rem 0 1rem 0;
}

main p {
  font-size: 1.2rem;
  text-align: left;
  display: block;
  margin: 0 2rem 2rem 2rem;
  max-width: 600px;
}

main form {
  text-align: left;
  margin: 3rem 2rem;
  display: block;
}

main form fieldset {
  border: none;
}

main form label {
  display: none;
}

main form input {
  display: block;
  border-bottom: 1px solid #000000;
  margin: 0 0 1.5rem 0;
  padding: 0 0 0.2rem 0;
  width: 100%;
}

main form input:focus {
  outline: none;
}

main form ::-webkit-input-placeholder {
  font-size: 0.9rem;
  font-weight: 400;
  text-transform: uppercase;
}

main form :-ms-input-placeholder {
  font-size: 0.9rem;
  font-weight: 400;
  text-transform: uppercase;
}

main form ::-ms-input-placeholder {
  font-size: 0.9rem;
  font-weight: 400;
  text-transform: uppercase;
}

main form ::placeholder {
  font-size: 0.9rem;
  font-weight: 400;
  text-transform: uppercase;
}

main form textarea {
  resize: none;
  width: 100%;
  border-bottom: 1px solid #000000;
}

main form textarea:focus {
  outline: none;
}

main form input[type=submit] {
  font-family: "Raleway", Arial, Helvetica, sans-serif;
  font-size: 0.8rem;
  font-weight: 700;
  text-transform: uppercase;
  border: none;
  margin: 2rem  0 0 0;
  text-align: left;
  padding: 1rem;
  background-color: #FFE755;
  width: initial;
  border-radius: 5px;
  cursor: pointer;
}

main form input[type=submit]:hover {
  border: 2px solid #FFE755;
  background-color: #000000;
  color: #ffffff;
}

footer {
  background-color: #FFE755;
}

.topFooter {
  border-top: 1px solid #000000;
}

.topFooter .adress {
  margin: 2rem auto;
  text-align: center;
  letter-spacing: 0.1rem;
}

.topFooter .adress h3 {
  font-size: 1.4rem;
  text-transform: uppercase;
  padding: 0 0 0.3rem;
}

.topFooter .adress a:link, .topFooter .adress a:visited {
  text-decoration: none;
  color: #000000;
}

.topFooter .adress li {
  font-style: normal;
  padding: 0.1rem;
}

.topFooter .social h3 {
  display: none;
}

.topFooter .social ul {
  text-align: center;
  margin: 2rem 0 1rem 0;
}

.topFooter .social ul li {
  display: inline-block;
}

.bottomFooter {
  border-top: 1px solid #000000;
  text-align: center;
  font-size: 0.7rem;
  padding: 0.8rem 0 0.5rem 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
